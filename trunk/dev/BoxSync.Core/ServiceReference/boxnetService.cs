//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 
namespace BoxSync.Core.ServiceReference {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="boxnetBinding", Namespace="urn:boxnet")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SOAPComment))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SOAPCollaborator))]
    public partial class boxnetService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback authorizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_account_infoOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_ticketOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_auth_tokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback check_tokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerOperationCompleted;
        
        private System.Threading.SendOrPostCallback register_new_userOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_account_treeOperationCompleted;
        
        private System.Threading.SendOrPostCallback export_tagsOperationCompleted;
        
        private System.Threading.SendOrPostCallback create_folderOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveOperationCompleted;
        
        private System.Threading.SendOrPostCallback renameOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback public_shareOperationCompleted;
        
        private System.Threading.SendOrPostCallback public_unshareOperationCompleted;
        
        private System.Threading.SendOrPostCallback private_shareOperationCompleted;
        
        private System.Threading.SendOrPostCallback add_to_myboxOperationCompleted;
        
        private System.Threading.SendOrPostCallback box_add_nodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback add_to_tagOperationCompleted;
        
        private System.Threading.SendOrPostCallback email_sharedOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_public_folder_treeOperationCompleted;
        
        private System.Threading.SendOrPostCallback add_to_public_folderOperationCompleted;
        
        private System.Threading.SendOrPostCallback verify_registration_emailOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_file_infoOperationCompleted;
        
        private System.Threading.SendOrPostCallback set_descriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback register_new_user_nameOperationCompleted;
        
        private System.Threading.SendOrPostCallback register_paid_userOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_friendsOperationCompleted;
        
        private System.Threading.SendOrPostCallback request_friendsOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_updatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_collaboration_invitesOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_collaboratorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback invite_collaboratorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback accept_collaborationOperationCompleted;
        
        private System.Threading.SendOrPostCallback remove_collaborationOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_collaboration_linkOperationCompleted;
        
        private System.Threading.SendOrPostCallback toggle_collaboration_linkOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_collaboration_permissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback collaborator_change_permissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback collaborator_change_notificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_commentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback add_commentOperationCompleted;
        
        private System.Threading.SendOrPostCallback delete_commentOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_directory_checksumOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_server_timeOperationCompleted;
        
        /// <remarks/>
        public boxnetService() {
            this.Url = "http://box.net/api/soap";
        }
        
        /// <remarks/>
        public event authorizationCompletedEventHandler authorizationCompleted;
        
        /// <remarks/>
        public event get_account_infoCompletedEventHandler get_account_infoCompleted;
        
        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
        /// <remarks/>
        public event get_ticketCompletedEventHandler get_ticketCompleted;
        
        /// <remarks/>
        public event get_auth_tokenCompletedEventHandler get_auth_tokenCompleted;
        
        /// <remarks/>
        public event check_tokenCompletedEventHandler check_tokenCompleted;
        
        /// <remarks/>
        public event registerCompletedEventHandler registerCompleted;
        
        /// <remarks/>
        public event register_new_userCompletedEventHandler register_new_userCompleted;
        
        /// <remarks/>
        public event get_account_treeCompletedEventHandler get_account_treeCompleted;
        
        /// <remarks/>
        public event export_tagsCompletedEventHandler export_tagsCompleted;
        
        /// <remarks/>
        public event create_folderCompletedEventHandler create_folderCompleted;
        
        /// <remarks/>
        public event copyCompletedEventHandler copyCompleted;
        
        /// <remarks/>
        public event moveCompletedEventHandler moveCompleted;
        
        /// <remarks/>
        public event renameCompletedEventHandler renameCompleted;
        
        /// <remarks/>
        public event deleteCompletedEventHandler deleteCompleted;
        
        /// <remarks/>
        public event public_shareCompletedEventHandler public_shareCompleted;
        
        /// <remarks/>
        public event public_unshareCompletedEventHandler public_unshareCompleted;
        
        /// <remarks/>
        public event private_shareCompletedEventHandler private_shareCompleted;
        
        /// <remarks/>
        public event add_to_myboxCompletedEventHandler add_to_myboxCompleted;
        
        /// <remarks/>
        public event box_add_nodeCompletedEventHandler box_add_nodeCompleted;
        
        /// <remarks/>
        public event add_to_tagCompletedEventHandler add_to_tagCompleted;
        
        /// <remarks/>
        public event email_sharedCompletedEventHandler email_sharedCompleted;
        
        /// <remarks/>
        public event get_public_folder_treeCompletedEventHandler get_public_folder_treeCompleted;
        
        /// <remarks/>
        public event add_to_public_folderCompletedEventHandler add_to_public_folderCompleted;
        
        /// <remarks/>
        public event verify_registration_emailCompletedEventHandler verify_registration_emailCompleted;
        
        /// <remarks/>
        public event get_file_infoCompletedEventHandler get_file_infoCompleted;
        
        /// <remarks/>
        public event set_descriptionCompletedEventHandler set_descriptionCompleted;
        
        /// <remarks/>
        public event register_new_user_nameCompletedEventHandler register_new_user_nameCompleted;
        
        /// <remarks/>
        public event register_paid_userCompletedEventHandler register_paid_userCompleted;
        
        /// <remarks/>
        public event get_friendsCompletedEventHandler get_friendsCompleted;
        
        /// <remarks/>
        public event request_friendsCompletedEventHandler request_friendsCompleted;
        
        /// <remarks/>
        public event get_updatesCompletedEventHandler get_updatesCompleted;
        
        /// <remarks/>
        public event get_collaboration_invitesCompletedEventHandler get_collaboration_invitesCompleted;
        
        /// <remarks/>
        public event get_collaboratorsCompletedEventHandler get_collaboratorsCompleted;
        
        /// <remarks/>
        public event invite_collaboratorsCompletedEventHandler invite_collaboratorsCompleted;
        
        /// <remarks/>
        public event accept_collaborationCompletedEventHandler accept_collaborationCompleted;
        
        /// <remarks/>
        public event remove_collaborationCompletedEventHandler remove_collaborationCompleted;
        
        /// <remarks/>
        public event get_collaboration_linkCompletedEventHandler get_collaboration_linkCompleted;
        
        /// <remarks/>
        public event toggle_collaboration_linkCompletedEventHandler toggle_collaboration_linkCompleted;
        
        /// <remarks/>
        public event get_collaboration_permissionsCompletedEventHandler get_collaboration_permissionsCompleted;
        
        /// <remarks/>
        public event collaborator_change_permissionCompletedEventHandler collaborator_change_permissionCompleted;
        
        /// <remarks/>
        public event collaborator_change_notificationCompletedEventHandler collaborator_change_notificationCompleted;
        
        /// <remarks/>
        public event get_commentsCompletedEventHandler get_commentsCompleted;
        
        /// <remarks/>
        public event add_commentCompletedEventHandler add_commentCompleted;
        
        /// <remarks/>
        public event delete_commentCompletedEventHandler delete_commentCompleted;
        
        /// <remarks/>
        public event get_directory_checksumCompletedEventHandler get_directory_checksumCompleted;
        
        /// <remarks/>
        public event get_server_timeCompletedEventHandler get_server_timeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#authorization", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string authorization(string api_key, string login, string password, string method, out string auth_token, out SOAPUser user) {
            object[] results = this.Invoke("authorization", new object[] {
                        api_key,
                        login,
                        password,
                        method});
            auth_token = ((string)(results[1]));
            user = ((SOAPUser)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginauthorization(string api_key, string login, string password, string method, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("authorization", new object[] {
                        api_key,
                        login,
                        password,
                        method}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endauthorization(System.IAsyncResult asyncResult, out string auth_token, out SOAPUser user) {
            object[] results = this.EndInvoke(asyncResult);
            auth_token = ((string)(results[1]));
            user = ((SOAPUser)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void authorizationAsync(string api_key, string login, string password, string method) {
            this.authorizationAsync(api_key, login, password, method, null);
        }
        
        /// <remarks/>
        public void authorizationAsync(string api_key, string login, string password, string method, object userState) {
            if ((this.authorizationOperationCompleted == null)) {
                this.authorizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthorizationOperationCompleted);
            }
            this.InvokeAsync("authorization", new object[] {
                        api_key,
                        login,
                        password,
                        method}, this.authorizationOperationCompleted, userState);
        }
        
        private void OnauthorizationOperationCompleted(object arg) {
            if ((this.authorizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authorizationCompleted(this, new authorizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#get_account_info", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string get_account_info(string api_key, string auth_token, out SOAPUser user) {
            object[] results = this.Invoke("get_account_info", new object[] {
                        api_key,
                        auth_token});
            user = ((SOAPUser)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_account_info(string api_key, string auth_token, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_account_info", new object[] {
                        api_key,
                        auth_token}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endget_account_info(System.IAsyncResult asyncResult, out SOAPUser user) {
            object[] results = this.EndInvoke(asyncResult);
            user = ((SOAPUser)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_account_infoAsync(string api_key, string auth_token) {
            this.get_account_infoAsync(api_key, auth_token, null);
        }
        
        /// <remarks/>
        public void get_account_infoAsync(string api_key, string auth_token, object userState) {
            if ((this.get_account_infoOperationCompleted == null)) {
                this.get_account_infoOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_account_infoOperationCompleted);
            }
            this.InvokeAsync("get_account_info", new object[] {
                        api_key,
                        auth_token}, this.get_account_infoOperationCompleted, userState);
        }
        
        private void Onget_account_infoOperationCompleted(object arg) {
            if ((this.get_account_infoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_account_infoCompleted(this, new get_account_infoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#logout", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string logout(string api_key, string auth_token) {
            object[] results = this.Invoke("logout", new object[] {
                        api_key,
                        auth_token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginlogout(string api_key, string auth_token, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("logout", new object[] {
                        api_key,
                        auth_token}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endlogout(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void logoutAsync(string api_key, string auth_token) {
            this.logoutAsync(api_key, auth_token, null);
        }
        
        /// <remarks/>
        public void logoutAsync(string api_key, string auth_token, object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[] {
                        api_key,
                        auth_token}, this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new logoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#get_ticket", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string get_ticket(string api_key, out string ticket) {
            object[] results = this.Invoke("get_ticket", new object[] {
                        api_key});
            ticket = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_ticket(string api_key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_ticket", new object[] {
                        api_key}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endget_ticket(System.IAsyncResult asyncResult, out string ticket) {
            object[] results = this.EndInvoke(asyncResult);
            ticket = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_ticketAsync(string api_key) {
            this.get_ticketAsync(api_key, null);
        }
        
        /// <remarks/>
        public void get_ticketAsync(string api_key, object userState) {
            if ((this.get_ticketOperationCompleted == null)) {
                this.get_ticketOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_ticketOperationCompleted);
            }
            this.InvokeAsync("get_ticket", new object[] {
                        api_key}, this.get_ticketOperationCompleted, userState);
        }
        
        private void Onget_ticketOperationCompleted(object arg) {
            if ((this.get_ticketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_ticketCompleted(this, new get_ticketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#get_auth_token", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string get_auth_token(string api_key, string ticket, out string auth_token, out SOAPUser user) {
            object[] results = this.Invoke("get_auth_token", new object[] {
                        api_key,
                        ticket});
            auth_token = ((string)(results[1]));
            user = ((SOAPUser)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_auth_token(string api_key, string ticket, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_auth_token", new object[] {
                        api_key,
                        ticket}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endget_auth_token(System.IAsyncResult asyncResult, out string auth_token, out SOAPUser user) {
            object[] results = this.EndInvoke(asyncResult);
            auth_token = ((string)(results[1]));
            user = ((SOAPUser)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_auth_tokenAsync(string api_key, string ticket) {
            this.get_auth_tokenAsync(api_key, ticket, null);
        }
        
        /// <remarks/>
        public void get_auth_tokenAsync(string api_key, string ticket, object userState) {
            if ((this.get_auth_tokenOperationCompleted == null)) {
                this.get_auth_tokenOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_auth_tokenOperationCompleted);
            }
            this.InvokeAsync("get_auth_token", new object[] {
                        api_key,
                        ticket}, this.get_auth_tokenOperationCompleted, userState);
        }
        
        private void Onget_auth_tokenOperationCompleted(object arg) {
            if ((this.get_auth_tokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_auth_tokenCompleted(this, new get_auth_tokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#check_token", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string check_token(string api_key, ref string auth_token, out SOAPUser user) {
            object[] results = this.Invoke("check_token", new object[] {
                        api_key,
                        auth_token});
            auth_token = ((string)(results[1]));
            user = ((SOAPUser)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begincheck_token(string api_key, string auth_token, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("check_token", new object[] {
                        api_key,
                        auth_token}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endcheck_token(System.IAsyncResult asyncResult, out string auth_token, out SOAPUser user) {
            object[] results = this.EndInvoke(asyncResult);
            auth_token = ((string)(results[1]));
            user = ((SOAPUser)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void check_tokenAsync(string api_key, string auth_token) {
            this.check_tokenAsync(api_key, auth_token, null);
        }
        
        /// <remarks/>
        public void check_tokenAsync(string api_key, string auth_token, object userState) {
            if ((this.check_tokenOperationCompleted == null)) {
                this.check_tokenOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncheck_tokenOperationCompleted);
            }
            this.InvokeAsync("check_token", new object[] {
                        api_key,
                        auth_token}, this.check_tokenOperationCompleted, userState);
        }
        
        private void Oncheck_tokenOperationCompleted(object arg) {
            if ((this.check_tokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.check_tokenCompleted(this, new check_tokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#register", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string register(string api_key, string login, string password, out string auth_token, out SOAPUser user) {
            object[] results = this.Invoke("register", new object[] {
                        api_key,
                        login,
                        password});
            auth_token = ((string)(results[1]));
            user = ((SOAPUser)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginregister(string api_key, string login, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("register", new object[] {
                        api_key,
                        login,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endregister(System.IAsyncResult asyncResult, out string auth_token, out SOAPUser user) {
            object[] results = this.EndInvoke(asyncResult);
            auth_token = ((string)(results[1]));
            user = ((SOAPUser)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void registerAsync(string api_key, string login, string password) {
            this.registerAsync(api_key, login, password, null);
        }
        
        /// <remarks/>
        public void registerAsync(string api_key, string login, string password, object userState) {
            if ((this.registerOperationCompleted == null)) {
                this.registerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterOperationCompleted);
            }
            this.InvokeAsync("register", new object[] {
                        api_key,
                        login,
                        password}, this.registerOperationCompleted, userState);
        }
        
        private void OnregisterOperationCompleted(object arg) {
            if ((this.registerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerCompleted(this, new registerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#register_new_user", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string register_new_user(string api_key, string login, string password, out string auth_token, out SOAPUser user) {
            object[] results = this.Invoke("register_new_user", new object[] {
                        api_key,
                        login,
                        password});
            auth_token = ((string)(results[1]));
            user = ((SOAPUser)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginregister_new_user(string api_key, string login, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("register_new_user", new object[] {
                        api_key,
                        login,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endregister_new_user(System.IAsyncResult asyncResult, out string auth_token, out SOAPUser user) {
            object[] results = this.EndInvoke(asyncResult);
            auth_token = ((string)(results[1]));
            user = ((SOAPUser)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void register_new_userAsync(string api_key, string login, string password) {
            this.register_new_userAsync(api_key, login, password, null);
        }
        
        /// <remarks/>
        public void register_new_userAsync(string api_key, string login, string password, object userState) {
            if ((this.register_new_userOperationCompleted == null)) {
                this.register_new_userOperationCompleted = new System.Threading.SendOrPostCallback(this.Onregister_new_userOperationCompleted);
            }
            this.InvokeAsync("register_new_user", new object[] {
                        api_key,
                        login,
                        password}, this.register_new_userOperationCompleted, userState);
        }
        
        private void Onregister_new_userOperationCompleted(object arg) {
            if ((this.register_new_userCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.register_new_userCompleted(this, new register_new_userCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#get_account_tree", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string get_account_tree(string api_key, string auth_token, long folder_id, string[] @params, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] out byte[] tree) {
            object[] results = this.Invoke("get_account_tree", new object[] {
                        api_key,
                        auth_token,
                        folder_id,
                        @params});
            tree = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_account_tree(string api_key, string auth_token, long folder_id, string[] @params, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_account_tree", new object[] {
                        api_key,
                        auth_token,
                        folder_id,
                        @params}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endget_account_tree(System.IAsyncResult asyncResult, out byte[] tree) {
            object[] results = this.EndInvoke(asyncResult);
            tree = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_account_treeAsync(string api_key, string auth_token, long folder_id, string[] @params) {
            this.get_account_treeAsync(api_key, auth_token, folder_id, @params, null);
        }
        
        /// <remarks/>
        public void get_account_treeAsync(string api_key, string auth_token, long folder_id, string[] @params, object userState) {
            if ((this.get_account_treeOperationCompleted == null)) {
                this.get_account_treeOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_account_treeOperationCompleted);
            }
            this.InvokeAsync("get_account_tree", new object[] {
                        api_key,
                        auth_token,
                        folder_id,
                        @params}, this.get_account_treeOperationCompleted, userState);
        }
        
        private void Onget_account_treeOperationCompleted(object arg) {
            if ((this.get_account_treeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_account_treeCompleted(this, new get_account_treeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#export_tags", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string export_tags(string api_key, string auth_token, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] out byte[] tag_xml) {
            object[] results = this.Invoke("export_tags", new object[] {
                        api_key,
                        auth_token});
            tag_xml = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginexport_tags(string api_key, string auth_token, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("export_tags", new object[] {
                        api_key,
                        auth_token}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endexport_tags(System.IAsyncResult asyncResult, out byte[] tag_xml) {
            object[] results = this.EndInvoke(asyncResult);
            tag_xml = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void export_tagsAsync(string api_key, string auth_token) {
            this.export_tagsAsync(api_key, auth_token, null);
        }
        
        /// <remarks/>
        public void export_tagsAsync(string api_key, string auth_token, object userState) {
            if ((this.export_tagsOperationCompleted == null)) {
                this.export_tagsOperationCompleted = new System.Threading.SendOrPostCallback(this.Onexport_tagsOperationCompleted);
            }
            this.InvokeAsync("export_tags", new object[] {
                        api_key,
                        auth_token}, this.export_tagsOperationCompleted, userState);
        }
        
        private void Onexport_tagsOperationCompleted(object arg) {
            if ((this.export_tagsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.export_tagsCompleted(this, new export_tagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#create_folder", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string create_folder(string api_key, string auth_token, long parent_id, string name, long share, out SOAPFolder folder) {
            object[] results = this.Invoke("create_folder", new object[] {
                        api_key,
                        auth_token,
                        parent_id,
                        name,
                        share});
            folder = ((SOAPFolder)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begincreate_folder(string api_key, string auth_token, long parent_id, string name, long share, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("create_folder", new object[] {
                        api_key,
                        auth_token,
                        parent_id,
                        name,
                        share}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endcreate_folder(System.IAsyncResult asyncResult, out SOAPFolder folder) {
            object[] results = this.EndInvoke(asyncResult);
            folder = ((SOAPFolder)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void create_folderAsync(string api_key, string auth_token, long parent_id, string name, long share) {
            this.create_folderAsync(api_key, auth_token, parent_id, name, share, null);
        }
        
        /// <remarks/>
        public void create_folderAsync(string api_key, string auth_token, long parent_id, string name, long share, object userState) {
            if ((this.create_folderOperationCompleted == null)) {
                this.create_folderOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncreate_folderOperationCompleted);
            }
            this.InvokeAsync("create_folder", new object[] {
                        api_key,
                        auth_token,
                        parent_id,
                        name,
                        share}, this.create_folderOperationCompleted, userState);
        }
        
        private void Oncreate_folderOperationCompleted(object arg) {
            if ((this.create_folderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.create_folderCompleted(this, new create_folderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#copy", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string copy(string api_key, string auth_token, string target, long target_id, long destination_id) {
            object[] results = this.Invoke("copy", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        destination_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begincopy(string api_key, string auth_token, string target, long target_id, long destination_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("copy", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        destination_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endcopy(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void copyAsync(string api_key, string auth_token, string target, long target_id, long destination_id) {
            this.copyAsync(api_key, auth_token, target, target_id, destination_id, null);
        }
        
        /// <remarks/>
        public void copyAsync(string api_key, string auth_token, string target, long target_id, long destination_id, object userState) {
            if ((this.copyOperationCompleted == null)) {
                this.copyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyOperationCompleted);
            }
            this.InvokeAsync("copy", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        destination_id}, this.copyOperationCompleted, userState);
        }
        
        private void OncopyOperationCompleted(object arg) {
            if ((this.copyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyCompleted(this, new copyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#move", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string move(string api_key, string auth_token, string target, long target_id, long destination_id) {
            object[] results = this.Invoke("move", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        destination_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginmove(string api_key, string auth_token, string target, long target_id, long destination_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("move", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        destination_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endmove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void moveAsync(string api_key, string auth_token, string target, long target_id, long destination_id) {
            this.moveAsync(api_key, auth_token, target, target_id, destination_id, null);
        }
        
        /// <remarks/>
        public void moveAsync(string api_key, string auth_token, string target, long target_id, long destination_id, object userState) {
            if ((this.moveOperationCompleted == null)) {
                this.moveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveOperationCompleted);
            }
            this.InvokeAsync("move", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        destination_id}, this.moveOperationCompleted, userState);
        }
        
        private void OnmoveOperationCompleted(object arg) {
            if ((this.moveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveCompleted(this, new moveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#rename", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string rename(string api_key, string auth_token, string target, long target_id, string new_name) {
            object[] results = this.Invoke("rename", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        new_name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginrename(string api_key, string auth_token, string target, long target_id, string new_name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("rename", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        new_name}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endrename(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void renameAsync(string api_key, string auth_token, string target, long target_id, string new_name) {
            this.renameAsync(api_key, auth_token, target, target_id, new_name, null);
        }
        
        /// <remarks/>
        public void renameAsync(string api_key, string auth_token, string target, long target_id, string new_name, object userState) {
            if ((this.renameOperationCompleted == null)) {
                this.renameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrenameOperationCompleted);
            }
            this.InvokeAsync("rename", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        new_name}, this.renameOperationCompleted, userState);
        }
        
        private void OnrenameOperationCompleted(object arg) {
            if ((this.renameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.renameCompleted(this, new renameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#delete", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string delete(string api_key, string auth_token, string target, long target_id) {
            object[] results = this.Invoke("delete", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begindelete(string api_key, string auth_token, string target, long target_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("delete", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Enddelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAsync(string api_key, string auth_token, string target, long target_id) {
            this.deleteAsync(api_key, auth_token, target, target_id, null);
        }
        
        /// <remarks/>
        public void deleteAsync(string api_key, string auth_token, string target, long target_id, object userState) {
            if ((this.deleteOperationCompleted == null)) {
                this.deleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOperationCompleted);
            }
            this.InvokeAsync("delete", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id}, this.deleteOperationCompleted, userState);
        }
        
        private void OndeleteOperationCompleted(object arg) {
            if ((this.deleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCompleted(this, new deleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#public_share", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string public_share(string api_key, string auth_token, string target, long target_id, string password, string message, string[] emails, out string public_name) {
            object[] results = this.Invoke("public_share", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        password,
                        message,
                        emails});
            public_name = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginpublic_share(string api_key, string auth_token, string target, long target_id, string password, string message, string[] emails, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("public_share", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        password,
                        message,
                        emails}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endpublic_share(System.IAsyncResult asyncResult, out string public_name) {
            object[] results = this.EndInvoke(asyncResult);
            public_name = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void public_shareAsync(string api_key, string auth_token, string target, long target_id, string password, string message, string[] emails) {
            this.public_shareAsync(api_key, auth_token, target, target_id, password, message, emails, null);
        }
        
        /// <remarks/>
        public void public_shareAsync(string api_key, string auth_token, string target, long target_id, string password, string message, string[] emails, object userState) {
            if ((this.public_shareOperationCompleted == null)) {
                this.public_shareOperationCompleted = new System.Threading.SendOrPostCallback(this.Onpublic_shareOperationCompleted);
            }
            this.InvokeAsync("public_share", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        password,
                        message,
                        emails}, this.public_shareOperationCompleted, userState);
        }
        
        private void Onpublic_shareOperationCompleted(object arg) {
            if ((this.public_shareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.public_shareCompleted(this, new public_shareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#public_unshare", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string public_unshare(string api_key, string auth_token, string target, long target_id) {
            object[] results = this.Invoke("public_unshare", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginpublic_unshare(string api_key, string auth_token, string target, long target_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("public_unshare", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endpublic_unshare(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void public_unshareAsync(string api_key, string auth_token, string target, long target_id) {
            this.public_unshareAsync(api_key, auth_token, target, target_id, null);
        }
        
        /// <remarks/>
        public void public_unshareAsync(string api_key, string auth_token, string target, long target_id, object userState) {
            if ((this.public_unshareOperationCompleted == null)) {
                this.public_unshareOperationCompleted = new System.Threading.SendOrPostCallback(this.Onpublic_unshareOperationCompleted);
            }
            this.InvokeAsync("public_unshare", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id}, this.public_unshareOperationCompleted, userState);
        }
        
        private void Onpublic_unshareOperationCompleted(object arg) {
            if ((this.public_unshareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.public_unshareCompleted(this, new public_unshareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#private_share", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string private_share(string api_key, string auth_token, string target, long target_id, string[] emails, string message, bool notify) {
            object[] results = this.Invoke("private_share", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        emails,
                        message,
                        notify});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginprivate_share(string api_key, string auth_token, string target, long target_id, string[] emails, string message, bool notify, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("private_share", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        emails,
                        message,
                        notify}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endprivate_share(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void private_shareAsync(string api_key, string auth_token, string target, long target_id, string[] emails, string message, bool notify) {
            this.private_shareAsync(api_key, auth_token, target, target_id, emails, message, notify, null);
        }
        
        /// <remarks/>
        public void private_shareAsync(string api_key, string auth_token, string target, long target_id, string[] emails, string message, bool notify, object userState) {
            if ((this.private_shareOperationCompleted == null)) {
                this.private_shareOperationCompleted = new System.Threading.SendOrPostCallback(this.Onprivate_shareOperationCompleted);
            }
            this.InvokeAsync("private_share", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        emails,
                        message,
                        notify}, this.private_shareOperationCompleted, userState);
        }
        
        private void Onprivate_shareOperationCompleted(object arg) {
            if ((this.private_shareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.private_shareCompleted(this, new private_shareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#add_to_mybox", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string add_to_mybox(string api_key, string auth_token, long file_id, string public_name, long folder_id, string tags) {
            object[] results = this.Invoke("add_to_mybox", new object[] {
                        api_key,
                        auth_token,
                        file_id,
                        public_name,
                        folder_id,
                        tags});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginadd_to_mybox(string api_key, string auth_token, long file_id, string public_name, long folder_id, string tags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("add_to_mybox", new object[] {
                        api_key,
                        auth_token,
                        file_id,
                        public_name,
                        folder_id,
                        tags}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endadd_to_mybox(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void add_to_myboxAsync(string api_key, string auth_token, long file_id, string public_name, long folder_id, string tags) {
            this.add_to_myboxAsync(api_key, auth_token, file_id, public_name, folder_id, tags, null);
        }
        
        /// <remarks/>
        public void add_to_myboxAsync(string api_key, string auth_token, long file_id, string public_name, long folder_id, string tags, object userState) {
            if ((this.add_to_myboxOperationCompleted == null)) {
                this.add_to_myboxOperationCompleted = new System.Threading.SendOrPostCallback(this.Onadd_to_myboxOperationCompleted);
            }
            this.InvokeAsync("add_to_mybox", new object[] {
                        api_key,
                        auth_token,
                        file_id,
                        public_name,
                        folder_id,
                        tags}, this.add_to_myboxOperationCompleted, userState);
        }
        
        private void Onadd_to_myboxOperationCompleted(object arg) {
            if ((this.add_to_myboxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.add_to_myboxCompleted(this, new add_to_myboxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#box_add_node", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string box_add_node(string api_key, string auth_token, long box_id, string target, long target_id) {
            object[] results = this.Invoke("box_add_node", new object[] {
                        api_key,
                        auth_token,
                        box_id,
                        target,
                        target_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginbox_add_node(string api_key, string auth_token, long box_id, string target, long target_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("box_add_node", new object[] {
                        api_key,
                        auth_token,
                        box_id,
                        target,
                        target_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endbox_add_node(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void box_add_nodeAsync(string api_key, string auth_token, long box_id, string target, long target_id) {
            this.box_add_nodeAsync(api_key, auth_token, box_id, target, target_id, null);
        }
        
        /// <remarks/>
        public void box_add_nodeAsync(string api_key, string auth_token, long box_id, string target, long target_id, object userState) {
            if ((this.box_add_nodeOperationCompleted == null)) {
                this.box_add_nodeOperationCompleted = new System.Threading.SendOrPostCallback(this.Onbox_add_nodeOperationCompleted);
            }
            this.InvokeAsync("box_add_node", new object[] {
                        api_key,
                        auth_token,
                        box_id,
                        target,
                        target_id}, this.box_add_nodeOperationCompleted, userState);
        }
        
        private void Onbox_add_nodeOperationCompleted(object arg) {
            if ((this.box_add_nodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.box_add_nodeCompleted(this, new box_add_nodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#add_to_tag", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string add_to_tag(string api_key, string auth_token, string[] tags, string target, long target_id) {
            object[] results = this.Invoke("add_to_tag", new object[] {
                        api_key,
                        auth_token,
                        tags,
                        target,
                        target_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginadd_to_tag(string api_key, string auth_token, string[] tags, string target, long target_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("add_to_tag", new object[] {
                        api_key,
                        auth_token,
                        tags,
                        target,
                        target_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endadd_to_tag(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void add_to_tagAsync(string api_key, string auth_token, string[] tags, string target, long target_id) {
            this.add_to_tagAsync(api_key, auth_token, tags, target, target_id, null);
        }
        
        /// <remarks/>
        public void add_to_tagAsync(string api_key, string auth_token, string[] tags, string target, long target_id, object userState) {
            if ((this.add_to_tagOperationCompleted == null)) {
                this.add_to_tagOperationCompleted = new System.Threading.SendOrPostCallback(this.Onadd_to_tagOperationCompleted);
            }
            this.InvokeAsync("add_to_tag", new object[] {
                        api_key,
                        auth_token,
                        tags,
                        target,
                        target_id}, this.add_to_tagOperationCompleted, userState);
        }
        
        private void Onadd_to_tagOperationCompleted(object arg) {
            if ((this.add_to_tagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.add_to_tagCompleted(this, new add_to_tagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#email_shared", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string email_shared(string api_key, string shared_name, string[] emails, string message, string from_email) {
            object[] results = this.Invoke("email_shared", new object[] {
                        api_key,
                        shared_name,
                        emails,
                        message,
                        from_email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginemail_shared(string api_key, string shared_name, string[] emails, string message, string from_email, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("email_shared", new object[] {
                        api_key,
                        shared_name,
                        emails,
                        message,
                        from_email}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endemail_shared(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void email_sharedAsync(string api_key, string shared_name, string[] emails, string message, string from_email) {
            this.email_sharedAsync(api_key, shared_name, emails, message, from_email, null);
        }
        
        /// <remarks/>
        public void email_sharedAsync(string api_key, string shared_name, string[] emails, string message, string from_email, object userState) {
            if ((this.email_sharedOperationCompleted == null)) {
                this.email_sharedOperationCompleted = new System.Threading.SendOrPostCallback(this.Onemail_sharedOperationCompleted);
            }
            this.InvokeAsync("email_shared", new object[] {
                        api_key,
                        shared_name,
                        emails,
                        message,
                        from_email}, this.email_sharedOperationCompleted, userState);
        }
        
        private void Onemail_sharedOperationCompleted(object arg) {
            if ((this.email_sharedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.email_sharedCompleted(this, new email_sharedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#get_public_folder_tree", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string get_public_folder_tree(string api_key, string public_name, string password, string[] @params, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] out byte[] tree) {
            object[] results = this.Invoke("get_public_folder_tree", new object[] {
                        api_key,
                        public_name,
                        password,
                        @params});
            tree = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_public_folder_tree(string api_key, string public_name, string password, string[] @params, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_public_folder_tree", new object[] {
                        api_key,
                        public_name,
                        password,
                        @params}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endget_public_folder_tree(System.IAsyncResult asyncResult, out byte[] tree) {
            object[] results = this.EndInvoke(asyncResult);
            tree = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_public_folder_treeAsync(string api_key, string public_name, string password, string[] @params) {
            this.get_public_folder_treeAsync(api_key, public_name, password, @params, null);
        }
        
        /// <remarks/>
        public void get_public_folder_treeAsync(string api_key, string public_name, string password, string[] @params, object userState) {
            if ((this.get_public_folder_treeOperationCompleted == null)) {
                this.get_public_folder_treeOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_public_folder_treeOperationCompleted);
            }
            this.InvokeAsync("get_public_folder_tree", new object[] {
                        api_key,
                        public_name,
                        password,
                        @params}, this.get_public_folder_treeOperationCompleted, userState);
        }
        
        private void Onget_public_folder_treeOperationCompleted(object arg) {
            if ((this.get_public_folder_treeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_public_folder_treeCompleted(this, new get_public_folder_treeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#add_to_public_folder", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string add_to_public_folder(string api_key, string auth_token, string public_name, string password, string target, long target_id) {
            object[] results = this.Invoke("add_to_public_folder", new object[] {
                        api_key,
                        auth_token,
                        public_name,
                        password,
                        target,
                        target_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginadd_to_public_folder(string api_key, string auth_token, string public_name, string password, string target, long target_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("add_to_public_folder", new object[] {
                        api_key,
                        auth_token,
                        public_name,
                        password,
                        target,
                        target_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endadd_to_public_folder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void add_to_public_folderAsync(string api_key, string auth_token, string public_name, string password, string target, long target_id) {
            this.add_to_public_folderAsync(api_key, auth_token, public_name, password, target, target_id, null);
        }
        
        /// <remarks/>
        public void add_to_public_folderAsync(string api_key, string auth_token, string public_name, string password, string target, long target_id, object userState) {
            if ((this.add_to_public_folderOperationCompleted == null)) {
                this.add_to_public_folderOperationCompleted = new System.Threading.SendOrPostCallback(this.Onadd_to_public_folderOperationCompleted);
            }
            this.InvokeAsync("add_to_public_folder", new object[] {
                        api_key,
                        auth_token,
                        public_name,
                        password,
                        target,
                        target_id}, this.add_to_public_folderOperationCompleted, userState);
        }
        
        private void Onadd_to_public_folderOperationCompleted(object arg) {
            if ((this.add_to_public_folderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.add_to_public_folderCompleted(this, new add_to_public_folderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#verify_registration_email", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string verify_registration_email(string api_key, string login) {
            object[] results = this.Invoke("verify_registration_email", new object[] {
                        api_key,
                        login});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginverify_registration_email(string api_key, string login, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("verify_registration_email", new object[] {
                        api_key,
                        login}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endverify_registration_email(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void verify_registration_emailAsync(string api_key, string login) {
            this.verify_registration_emailAsync(api_key, login, null);
        }
        
        /// <remarks/>
        public void verify_registration_emailAsync(string api_key, string login, object userState) {
            if ((this.verify_registration_emailOperationCompleted == null)) {
                this.verify_registration_emailOperationCompleted = new System.Threading.SendOrPostCallback(this.Onverify_registration_emailOperationCompleted);
            }
            this.InvokeAsync("verify_registration_email", new object[] {
                        api_key,
                        login}, this.verify_registration_emailOperationCompleted, userState);
        }
        
        private void Onverify_registration_emailOperationCompleted(object arg) {
            if ((this.verify_registration_emailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.verify_registration_emailCompleted(this, new verify_registration_emailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#get_file_info", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string get_file_info(string api_key, string auth_token, long file_id, out SOAPFileInfo info) {
            object[] results = this.Invoke("get_file_info", new object[] {
                        api_key,
                        auth_token,
                        file_id});
            info = ((SOAPFileInfo)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_file_info(string api_key, string auth_token, long file_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_file_info", new object[] {
                        api_key,
                        auth_token,
                        file_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endget_file_info(System.IAsyncResult asyncResult, out SOAPFileInfo info) {
            object[] results = this.EndInvoke(asyncResult);
            info = ((SOAPFileInfo)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_file_infoAsync(string api_key, string auth_token, long file_id) {
            this.get_file_infoAsync(api_key, auth_token, file_id, null);
        }
        
        /// <remarks/>
        public void get_file_infoAsync(string api_key, string auth_token, long file_id, object userState) {
            if ((this.get_file_infoOperationCompleted == null)) {
                this.get_file_infoOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_file_infoOperationCompleted);
            }
            this.InvokeAsync("get_file_info", new object[] {
                        api_key,
                        auth_token,
                        file_id}, this.get_file_infoOperationCompleted, userState);
        }
        
        private void Onget_file_infoOperationCompleted(object arg) {
            if ((this.get_file_infoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_file_infoCompleted(this, new get_file_infoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#set_description", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string set_description(string api_key, string auth_token, string target, long target_id, string description) {
            object[] results = this.Invoke("set_description", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginset_description(string api_key, string auth_token, string target, long target_id, string description, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("set_description", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        description}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endset_description(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void set_descriptionAsync(string api_key, string auth_token, string target, long target_id, string description) {
            this.set_descriptionAsync(api_key, auth_token, target, target_id, description, null);
        }
        
        /// <remarks/>
        public void set_descriptionAsync(string api_key, string auth_token, string target, long target_id, string description, object userState) {
            if ((this.set_descriptionOperationCompleted == null)) {
                this.set_descriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.Onset_descriptionOperationCompleted);
            }
            this.InvokeAsync("set_description", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        description}, this.set_descriptionOperationCompleted, userState);
        }
        
        private void Onset_descriptionOperationCompleted(object arg) {
            if ((this.set_descriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.set_descriptionCompleted(this, new set_descriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#register_new_user_name", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string register_new_user_name(string api_key, string login, string password, string name, out string auth_token, out SOAPUser user) {
            object[] results = this.Invoke("register_new_user_name", new object[] {
                        api_key,
                        login,
                        password,
                        name});
            auth_token = ((string)(results[1]));
            user = ((SOAPUser)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginregister_new_user_name(string api_key, string login, string password, string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("register_new_user_name", new object[] {
                        api_key,
                        login,
                        password,
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endregister_new_user_name(System.IAsyncResult asyncResult, out string auth_token, out SOAPUser user) {
            object[] results = this.EndInvoke(asyncResult);
            auth_token = ((string)(results[1]));
            user = ((SOAPUser)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void register_new_user_nameAsync(string api_key, string login, string password, string name) {
            this.register_new_user_nameAsync(api_key, login, password, name, null);
        }
        
        /// <remarks/>
        public void register_new_user_nameAsync(string api_key, string login, string password, string name, object userState) {
            if ((this.register_new_user_nameOperationCompleted == null)) {
                this.register_new_user_nameOperationCompleted = new System.Threading.SendOrPostCallback(this.Onregister_new_user_nameOperationCompleted);
            }
            this.InvokeAsync("register_new_user_name", new object[] {
                        api_key,
                        login,
                        password,
                        name}, this.register_new_user_nameOperationCompleted, userState);
        }
        
        private void Onregister_new_user_nameOperationCompleted(object arg) {
            if ((this.register_new_user_nameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.register_new_user_nameCompleted(this, new register_new_user_nameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#register_paid_user", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string register_paid_user(
                    string api_key, 
                    string login, 
                    string password, 
                    string name, 
                    string plan, 
                    string period, 
                    string credit_card_first_name, 
                    string credit_card_last_name, 
                    string credit_card_street_address, 
                    string credit_card_zip, 
                    string credit_card_country, 
                    string credit_card_number, 
                    string credit_card_cvv, 
                    string credit_card_exp_date, 
                    out string auth_token, 
                    out SOAPUser user) {
            object[] results = this.Invoke("register_paid_user", new object[] {
                        api_key,
                        login,
                        password,
                        name,
                        plan,
                        period,
                        credit_card_first_name,
                        credit_card_last_name,
                        credit_card_street_address,
                        credit_card_zip,
                        credit_card_country,
                        credit_card_number,
                        credit_card_cvv,
                        credit_card_exp_date});
            auth_token = ((string)(results[1]));
            user = ((SOAPUser)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginregister_paid_user(
                    string api_key, 
                    string login, 
                    string password, 
                    string name, 
                    string plan, 
                    string period, 
                    string credit_card_first_name, 
                    string credit_card_last_name, 
                    string credit_card_street_address, 
                    string credit_card_zip, 
                    string credit_card_country, 
                    string credit_card_number, 
                    string credit_card_cvv, 
                    string credit_card_exp_date, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("register_paid_user", new object[] {
                        api_key,
                        login,
                        password,
                        name,
                        plan,
                        period,
                        credit_card_first_name,
                        credit_card_last_name,
                        credit_card_street_address,
                        credit_card_zip,
                        credit_card_country,
                        credit_card_number,
                        credit_card_cvv,
                        credit_card_exp_date}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endregister_paid_user(System.IAsyncResult asyncResult, out string auth_token, out SOAPUser user) {
            object[] results = this.EndInvoke(asyncResult);
            auth_token = ((string)(results[1]));
            user = ((SOAPUser)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void register_paid_userAsync(string api_key, string login, string password, string name, string plan, string period, string credit_card_first_name, string credit_card_last_name, string credit_card_street_address, string credit_card_zip, string credit_card_country, string credit_card_number, string credit_card_cvv, string credit_card_exp_date) {
            this.register_paid_userAsync(api_key, login, password, name, plan, period, credit_card_first_name, credit_card_last_name, credit_card_street_address, credit_card_zip, credit_card_country, credit_card_number, credit_card_cvv, credit_card_exp_date, null);
        }
        
        /// <remarks/>
        public void register_paid_userAsync(string api_key, string login, string password, string name, string plan, string period, string credit_card_first_name, string credit_card_last_name, string credit_card_street_address, string credit_card_zip, string credit_card_country, string credit_card_number, string credit_card_cvv, string credit_card_exp_date, object userState) {
            if ((this.register_paid_userOperationCompleted == null)) {
                this.register_paid_userOperationCompleted = new System.Threading.SendOrPostCallback(this.Onregister_paid_userOperationCompleted);
            }
            this.InvokeAsync("register_paid_user", new object[] {
                        api_key,
                        login,
                        password,
                        name,
                        plan,
                        period,
                        credit_card_first_name,
                        credit_card_last_name,
                        credit_card_street_address,
                        credit_card_zip,
                        credit_card_country,
                        credit_card_number,
                        credit_card_cvv,
                        credit_card_exp_date}, this.register_paid_userOperationCompleted, userState);
        }
        
        private void Onregister_paid_userOperationCompleted(object arg) {
            if ((this.register_paid_userCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.register_paid_userCompleted(this, new register_paid_userCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#get_friends", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string get_friends(string api_key, string auth_token, string[] @params, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] out byte[] friends) {
            object[] results = this.Invoke("get_friends", new object[] {
                        api_key,
                        auth_token,
                        @params});
            friends = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_friends(string api_key, string auth_token, string[] @params, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_friends", new object[] {
                        api_key,
                        auth_token,
                        @params}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endget_friends(System.IAsyncResult asyncResult, out byte[] friends) {
            object[] results = this.EndInvoke(asyncResult);
            friends = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_friendsAsync(string api_key, string auth_token, string[] @params) {
            this.get_friendsAsync(api_key, auth_token, @params, null);
        }
        
        /// <remarks/>
        public void get_friendsAsync(string api_key, string auth_token, string[] @params, object userState) {
            if ((this.get_friendsOperationCompleted == null)) {
                this.get_friendsOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_friendsOperationCompleted);
            }
            this.InvokeAsync("get_friends", new object[] {
                        api_key,
                        auth_token,
                        @params}, this.get_friendsOperationCompleted, userState);
        }
        
        private void Onget_friendsOperationCompleted(object arg) {
            if ((this.get_friendsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_friendsCompleted(this, new get_friendsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#request_friends", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string request_friends(string api_key, string auth_token, string[] emails, string message, string[] @params) {
            object[] results = this.Invoke("request_friends", new object[] {
                        api_key,
                        auth_token,
                        emails,
                        message,
                        @params});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginrequest_friends(string api_key, string auth_token, string[] emails, string message, string[] @params, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("request_friends", new object[] {
                        api_key,
                        auth_token,
                        emails,
                        message,
                        @params}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endrequest_friends(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void request_friendsAsync(string api_key, string auth_token, string[] emails, string message, string[] @params) {
            this.request_friendsAsync(api_key, auth_token, emails, message, @params, null);
        }
        
        /// <remarks/>
        public void request_friendsAsync(string api_key, string auth_token, string[] emails, string message, string[] @params, object userState) {
            if ((this.request_friendsOperationCompleted == null)) {
                this.request_friendsOperationCompleted = new System.Threading.SendOrPostCallback(this.Onrequest_friendsOperationCompleted);
            }
            this.InvokeAsync("request_friends", new object[] {
                        api_key,
                        auth_token,
                        emails,
                        message,
                        @params}, this.request_friendsOperationCompleted, userState);
        }
        
        private void Onrequest_friendsOperationCompleted(object arg) {
            if ((this.request_friendsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.request_friendsCompleted(this, new request_friendsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#get_updates", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string get_updates(string api_key, string auth_token, long begin_timestamp, long end_timestamp, string[] @params, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] out byte[] updates) {
            object[] results = this.Invoke("get_updates", new object[] {
                        api_key,
                        auth_token,
                        begin_timestamp,
                        end_timestamp,
                        @params});
            updates = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_updates(string api_key, string auth_token, long begin_timestamp, long end_timestamp, string[] @params, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_updates", new object[] {
                        api_key,
                        auth_token,
                        begin_timestamp,
                        end_timestamp,
                        @params}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endget_updates(System.IAsyncResult asyncResult, out byte[] updates) {
            object[] results = this.EndInvoke(asyncResult);
            updates = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_updatesAsync(string api_key, string auth_token, long begin_timestamp, long end_timestamp, string[] @params) {
            this.get_updatesAsync(api_key, auth_token, begin_timestamp, end_timestamp, @params, null);
        }
        
        /// <remarks/>
        public void get_updatesAsync(string api_key, string auth_token, long begin_timestamp, long end_timestamp, string[] @params, object userState) {
            if ((this.get_updatesOperationCompleted == null)) {
                this.get_updatesOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_updatesOperationCompleted);
            }
            this.InvokeAsync("get_updates", new object[] {
                        api_key,
                        auth_token,
                        begin_timestamp,
                        end_timestamp,
                        @params}, this.get_updatesOperationCompleted, userState);
        }
        
        private void Onget_updatesOperationCompleted(object arg) {
            if ((this.get_updatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_updatesCompleted(this, new get_updatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#get_collaboration_invites", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string get_collaboration_invites(string api_key, string auth_token, string collab_status, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] out byte[] collaborations) {
            object[] results = this.Invoke("get_collaboration_invites", new object[] {
                        api_key,
                        auth_token,
                        collab_status});
            collaborations = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_collaboration_invites(string api_key, string auth_token, string collab_status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_collaboration_invites", new object[] {
                        api_key,
                        auth_token,
                        collab_status}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endget_collaboration_invites(System.IAsyncResult asyncResult, out byte[] collaborations) {
            object[] results = this.EndInvoke(asyncResult);
            collaborations = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_collaboration_invitesAsync(string api_key, string auth_token, string collab_status) {
            this.get_collaboration_invitesAsync(api_key, auth_token, collab_status, null);
        }
        
        /// <remarks/>
        public void get_collaboration_invitesAsync(string api_key, string auth_token, string collab_status, object userState) {
            if ((this.get_collaboration_invitesOperationCompleted == null)) {
                this.get_collaboration_invitesOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_collaboration_invitesOperationCompleted);
            }
            this.InvokeAsync("get_collaboration_invites", new object[] {
                        api_key,
                        auth_token,
                        collab_status}, this.get_collaboration_invitesOperationCompleted, userState);
        }
        
        private void Onget_collaboration_invitesOperationCompleted(object arg) {
            if ((this.get_collaboration_invitesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_collaboration_invitesCompleted(this, new get_collaboration_invitesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#get_collaborators", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string get_collaborators(string api_key, string auth_token, string target, long target_id, out SOAPCollaborator[] collaborators) {
            object[] results = this.Invoke("get_collaborators", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id});
            collaborators = ((SOAPCollaborator[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_collaborators(string api_key, string auth_token, string target, long target_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_collaborators", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endget_collaborators(System.IAsyncResult asyncResult, out SOAPCollaborator[] collaborators) {
            object[] results = this.EndInvoke(asyncResult);
            collaborators = ((SOAPCollaborator[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_collaboratorsAsync(string api_key, string auth_token, string target, long target_id) {
            this.get_collaboratorsAsync(api_key, auth_token, target, target_id, null);
        }
        
        /// <remarks/>
        public void get_collaboratorsAsync(string api_key, string auth_token, string target, long target_id, object userState) {
            if ((this.get_collaboratorsOperationCompleted == null)) {
                this.get_collaboratorsOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_collaboratorsOperationCompleted);
            }
            this.InvokeAsync("get_collaborators", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id}, this.get_collaboratorsOperationCompleted, userState);
        }
        
        private void Onget_collaboratorsOperationCompleted(object arg) {
            if ((this.get_collaboratorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_collaboratorsCompleted(this, new get_collaboratorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#invite_collaborators", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string invite_collaborators(string api_key, string auth_token, string target, long target_id, string emails, string permission_name, bool resend_invite, bool no_email, string[] @params, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] out byte[] invited_collaborators, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] out byte[] unsuccessful_invitations, out SOAPCollaborator[] collaborators) {
            object[] results = this.Invoke("invite_collaborators", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        emails,
                        permission_name,
                        resend_invite,
                        no_email,
                        @params});
            invited_collaborators = ((byte[])(results[1]));
            unsuccessful_invitations = ((byte[])(results[2]));
            collaborators = ((SOAPCollaborator[])(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begininvite_collaborators(string api_key, string auth_token, string target, long target_id, string emails, string permission_name, bool resend_invite, bool no_email, string[] @params, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("invite_collaborators", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        emails,
                        permission_name,
                        resend_invite,
                        no_email,
                        @params}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endinvite_collaborators(System.IAsyncResult asyncResult, out byte[] invited_collaborators, out byte[] unsuccessful_invitations, out SOAPCollaborator[] collaborators) {
            object[] results = this.EndInvoke(asyncResult);
            invited_collaborators = ((byte[])(results[1]));
            unsuccessful_invitations = ((byte[])(results[2]));
            collaborators = ((SOAPCollaborator[])(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void invite_collaboratorsAsync(string api_key, string auth_token, string target, long target_id, string emails, string permission_name, bool resend_invite, bool no_email, string[] @params) {
            this.invite_collaboratorsAsync(api_key, auth_token, target, target_id, emails, permission_name, resend_invite, no_email, @params, null);
        }
        
        /// <remarks/>
        public void invite_collaboratorsAsync(string api_key, string auth_token, string target, long target_id, string emails, string permission_name, bool resend_invite, bool no_email, string[] @params, object userState) {
            if ((this.invite_collaboratorsOperationCompleted == null)) {
                this.invite_collaboratorsOperationCompleted = new System.Threading.SendOrPostCallback(this.Oninvite_collaboratorsOperationCompleted);
            }
            this.InvokeAsync("invite_collaborators", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        emails,
                        permission_name,
                        resend_invite,
                        no_email,
                        @params}, this.invite_collaboratorsOperationCompleted, userState);
        }
        
        private void Oninvite_collaboratorsOperationCompleted(object arg) {
            if ((this.invite_collaboratorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.invite_collaboratorsCompleted(this, new invite_collaboratorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#accept_collaboration", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string accept_collaboration(string api_key, string auth_token, string target, long target_id, bool accept, string invite_token) {
            object[] results = this.Invoke("accept_collaboration", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        accept,
                        invite_token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginaccept_collaboration(string api_key, string auth_token, string target, long target_id, bool accept, string invite_token, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("accept_collaboration", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        accept,
                        invite_token}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endaccept_collaboration(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void accept_collaborationAsync(string api_key, string auth_token, string target, long target_id, bool accept, string invite_token) {
            this.accept_collaborationAsync(api_key, auth_token, target, target_id, accept, invite_token, null);
        }
        
        /// <remarks/>
        public void accept_collaborationAsync(string api_key, string auth_token, string target, long target_id, bool accept, string invite_token, object userState) {
            if ((this.accept_collaborationOperationCompleted == null)) {
                this.accept_collaborationOperationCompleted = new System.Threading.SendOrPostCallback(this.Onaccept_collaborationOperationCompleted);
            }
            this.InvokeAsync("accept_collaboration", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        accept,
                        invite_token}, this.accept_collaborationOperationCompleted, userState);
        }
        
        private void Onaccept_collaborationOperationCompleted(object arg) {
            if ((this.accept_collaborationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accept_collaborationCompleted(this, new accept_collaborationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#remove_collaboration", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string remove_collaboration(string api_key, string auth_token, string target, long target_id, string email, out SOAPCollaborator[] collaborators) {
            object[] results = this.Invoke("remove_collaboration", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        email});
            collaborators = ((SOAPCollaborator[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginremove_collaboration(string api_key, string auth_token, string target, long target_id, string email, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("remove_collaboration", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        email}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endremove_collaboration(System.IAsyncResult asyncResult, out SOAPCollaborator[] collaborators) {
            object[] results = this.EndInvoke(asyncResult);
            collaborators = ((SOAPCollaborator[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void remove_collaborationAsync(string api_key, string auth_token, string target, long target_id, string email) {
            this.remove_collaborationAsync(api_key, auth_token, target, target_id, email, null);
        }
        
        /// <remarks/>
        public void remove_collaborationAsync(string api_key, string auth_token, string target, long target_id, string email, object userState) {
            if ((this.remove_collaborationOperationCompleted == null)) {
                this.remove_collaborationOperationCompleted = new System.Threading.SendOrPostCallback(this.Onremove_collaborationOperationCompleted);
            }
            this.InvokeAsync("remove_collaboration", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        email}, this.remove_collaborationOperationCompleted, userState);
        }
        
        private void Onremove_collaborationOperationCompleted(object arg) {
            if ((this.remove_collaborationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.remove_collaborationCompleted(this, new remove_collaborationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#get_collaboration_link", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string get_collaboration_link(string api_key, string auth_token, string target, long target_id, string[] @params, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] out byte[] collab_link) {
            object[] results = this.Invoke("get_collaboration_link", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        @params});
            collab_link = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_collaboration_link(string api_key, string auth_token, string target, long target_id, string[] @params, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_collaboration_link", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        @params}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endget_collaboration_link(System.IAsyncResult asyncResult, out byte[] collab_link) {
            object[] results = this.EndInvoke(asyncResult);
            collab_link = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_collaboration_linkAsync(string api_key, string auth_token, string target, long target_id, string[] @params) {
            this.get_collaboration_linkAsync(api_key, auth_token, target, target_id, @params, null);
        }
        
        /// <remarks/>
        public void get_collaboration_linkAsync(string api_key, string auth_token, string target, long target_id, string[] @params, object userState) {
            if ((this.get_collaboration_linkOperationCompleted == null)) {
                this.get_collaboration_linkOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_collaboration_linkOperationCompleted);
            }
            this.InvokeAsync("get_collaboration_link", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        @params}, this.get_collaboration_linkOperationCompleted, userState);
        }
        
        private void Onget_collaboration_linkOperationCompleted(object arg) {
            if ((this.get_collaboration_linkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_collaboration_linkCompleted(this, new get_collaboration_linkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#toggle_collaboration_link", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string toggle_collaboration_link(string api_key, string auth_token, string target, long target_id, bool enable, string[] @params, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] out byte[] collab_link) {
            object[] results = this.Invoke("toggle_collaboration_link", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        enable,
                        @params});
            collab_link = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begintoggle_collaboration_link(string api_key, string auth_token, string target, long target_id, bool enable, string[] @params, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("toggle_collaboration_link", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        enable,
                        @params}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endtoggle_collaboration_link(System.IAsyncResult asyncResult, out byte[] collab_link) {
            object[] results = this.EndInvoke(asyncResult);
            collab_link = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void toggle_collaboration_linkAsync(string api_key, string auth_token, string target, long target_id, bool enable, string[] @params) {
            this.toggle_collaboration_linkAsync(api_key, auth_token, target, target_id, enable, @params, null);
        }
        
        /// <remarks/>
        public void toggle_collaboration_linkAsync(string api_key, string auth_token, string target, long target_id, bool enable, string[] @params, object userState) {
            if ((this.toggle_collaboration_linkOperationCompleted == null)) {
                this.toggle_collaboration_linkOperationCompleted = new System.Threading.SendOrPostCallback(this.Ontoggle_collaboration_linkOperationCompleted);
            }
            this.InvokeAsync("toggle_collaboration_link", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        enable,
                        @params}, this.toggle_collaboration_linkOperationCompleted, userState);
        }
        
        private void Ontoggle_collaboration_linkOperationCompleted(object arg) {
            if ((this.toggle_collaboration_linkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.toggle_collaboration_linkCompleted(this, new toggle_collaboration_linkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#get_collaboration_permissions", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string get_collaboration_permissions(string api_key, string auth_token, string[] @params, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] out byte[] permissions) {
            object[] results = this.Invoke("get_collaboration_permissions", new object[] {
                        api_key,
                        auth_token,
                        @params});
            permissions = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_collaboration_permissions(string api_key, string auth_token, string[] @params, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_collaboration_permissions", new object[] {
                        api_key,
                        auth_token,
                        @params}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endget_collaboration_permissions(System.IAsyncResult asyncResult, out byte[] permissions) {
            object[] results = this.EndInvoke(asyncResult);
            permissions = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_collaboration_permissionsAsync(string api_key, string auth_token, string[] @params) {
            this.get_collaboration_permissionsAsync(api_key, auth_token, @params, null);
        }
        
        /// <remarks/>
        public void get_collaboration_permissionsAsync(string api_key, string auth_token, string[] @params, object userState) {
            if ((this.get_collaboration_permissionsOperationCompleted == null)) {
                this.get_collaboration_permissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_collaboration_permissionsOperationCompleted);
            }
            this.InvokeAsync("get_collaboration_permissions", new object[] {
                        api_key,
                        auth_token,
                        @params}, this.get_collaboration_permissionsOperationCompleted, userState);
        }
        
        private void Onget_collaboration_permissionsOperationCompleted(object arg) {
            if ((this.get_collaboration_permissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_collaboration_permissionsCompleted(this, new get_collaboration_permissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#collaborator_change_permission", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string collaborator_change_permission(string api_key, string auth_token, string target, long target_id, string email, string permission_name, out SOAPCollaborator[] collaborators) {
            object[] results = this.Invoke("collaborator_change_permission", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        email,
                        permission_name});
            collaborators = ((SOAPCollaborator[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begincollaborator_change_permission(string api_key, string auth_token, string target, long target_id, string email, string permission_name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("collaborator_change_permission", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        email,
                        permission_name}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endcollaborator_change_permission(System.IAsyncResult asyncResult, out SOAPCollaborator[] collaborators) {
            object[] results = this.EndInvoke(asyncResult);
            collaborators = ((SOAPCollaborator[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void collaborator_change_permissionAsync(string api_key, string auth_token, string target, long target_id, string email, string permission_name) {
            this.collaborator_change_permissionAsync(api_key, auth_token, target, target_id, email, permission_name, null);
        }
        
        /// <remarks/>
        public void collaborator_change_permissionAsync(string api_key, string auth_token, string target, long target_id, string email, string permission_name, object userState) {
            if ((this.collaborator_change_permissionOperationCompleted == null)) {
                this.collaborator_change_permissionOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncollaborator_change_permissionOperationCompleted);
            }
            this.InvokeAsync("collaborator_change_permission", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        email,
                        permission_name}, this.collaborator_change_permissionOperationCompleted, userState);
        }
        
        private void Oncollaborator_change_permissionOperationCompleted(object arg) {
            if ((this.collaborator_change_permissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.collaborator_change_permissionCompleted(this, new collaborator_change_permissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#collaborator_change_notification", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string collaborator_change_notification(string api_key, string auth_token, string target, long target_id, bool enable, out SOAPCollaborator[] collaborators) {
            object[] results = this.Invoke("collaborator_change_notification", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        enable});
            collaborators = ((SOAPCollaborator[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begincollaborator_change_notification(string api_key, string auth_token, string target, long target_id, bool enable, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("collaborator_change_notification", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        enable}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endcollaborator_change_notification(System.IAsyncResult asyncResult, out SOAPCollaborator[] collaborators) {
            object[] results = this.EndInvoke(asyncResult);
            collaborators = ((SOAPCollaborator[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void collaborator_change_notificationAsync(string api_key, string auth_token, string target, long target_id, bool enable) {
            this.collaborator_change_notificationAsync(api_key, auth_token, target, target_id, enable, null);
        }
        
        /// <remarks/>
        public void collaborator_change_notificationAsync(string api_key, string auth_token, string target, long target_id, bool enable, object userState) {
            if ((this.collaborator_change_notificationOperationCompleted == null)) {
                this.collaborator_change_notificationOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncollaborator_change_notificationOperationCompleted);
            }
            this.InvokeAsync("collaborator_change_notification", new object[] {
                        api_key,
                        auth_token,
                        target,
                        target_id,
                        enable}, this.collaborator_change_notificationOperationCompleted, userState);
        }
        
        private void Oncollaborator_change_notificationOperationCompleted(object arg) {
            if ((this.collaborator_change_notificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.collaborator_change_notificationCompleted(this, new collaborator_change_notificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#get_comments", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string get_comments(string api_key, string auth_token, long item_id, string item_type, out SOAPComment[] comments) {
            object[] results = this.Invoke("get_comments", new object[] {
                        api_key,
                        auth_token,
                        item_id,
                        item_type});
            comments = ((SOAPComment[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_comments(string api_key, string auth_token, long item_id, string item_type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_comments", new object[] {
                        api_key,
                        auth_token,
                        item_id,
                        item_type}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endget_comments(System.IAsyncResult asyncResult, out SOAPComment[] comments) {
            object[] results = this.EndInvoke(asyncResult);
            comments = ((SOAPComment[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_commentsAsync(string api_key, string auth_token, long item_id, string item_type) {
            this.get_commentsAsync(api_key, auth_token, item_id, item_type, null);
        }
        
        /// <remarks/>
        public void get_commentsAsync(string api_key, string auth_token, long item_id, string item_type, object userState) {
            if ((this.get_commentsOperationCompleted == null)) {
                this.get_commentsOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_commentsOperationCompleted);
            }
            this.InvokeAsync("get_comments", new object[] {
                        api_key,
                        auth_token,
                        item_id,
                        item_type}, this.get_commentsOperationCompleted, userState);
        }
        
        private void Onget_commentsOperationCompleted(object arg) {
            if ((this.get_commentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_commentsCompleted(this, new get_commentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#add_comment", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string add_comment(string api_key, string auth_token, long item_id, string item_type, string message, out SOAPComment[] comments) {
            object[] results = this.Invoke("add_comment", new object[] {
                        api_key,
                        auth_token,
                        item_id,
                        item_type,
                        message});
            comments = ((SOAPComment[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginadd_comment(string api_key, string auth_token, long item_id, string item_type, string message, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("add_comment", new object[] {
                        api_key,
                        auth_token,
                        item_id,
                        item_type,
                        message}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endadd_comment(System.IAsyncResult asyncResult, out SOAPComment[] comments) {
            object[] results = this.EndInvoke(asyncResult);
            comments = ((SOAPComment[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void add_commentAsync(string api_key, string auth_token, long item_id, string item_type, string message) {
            this.add_commentAsync(api_key, auth_token, item_id, item_type, message, null);
        }
        
        /// <remarks/>
        public void add_commentAsync(string api_key, string auth_token, long item_id, string item_type, string message, object userState) {
            if ((this.add_commentOperationCompleted == null)) {
                this.add_commentOperationCompleted = new System.Threading.SendOrPostCallback(this.Onadd_commentOperationCompleted);
            }
            this.InvokeAsync("add_comment", new object[] {
                        api_key,
                        auth_token,
                        item_id,
                        item_type,
                        message}, this.add_commentOperationCompleted, userState);
        }
        
        private void Onadd_commentOperationCompleted(object arg) {
            if ((this.add_commentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.add_commentCompleted(this, new add_commentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#delete_comment", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string delete_comment(string api_key, string auth_token, long message_id) {
            object[] results = this.Invoke("delete_comment", new object[] {
                        api_key,
                        auth_token,
                        message_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begindelete_comment(string api_key, string auth_token, long message_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("delete_comment", new object[] {
                        api_key,
                        auth_token,
                        message_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Enddelete_comment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void delete_commentAsync(string api_key, string auth_token, long message_id) {
            this.delete_commentAsync(api_key, auth_token, message_id, null);
        }
        
        /// <remarks/>
        public void delete_commentAsync(string api_key, string auth_token, long message_id, object userState) {
            if ((this.delete_commentOperationCompleted == null)) {
                this.delete_commentOperationCompleted = new System.Threading.SendOrPostCallback(this.Ondelete_commentOperationCompleted);
            }
            this.InvokeAsync("delete_comment", new object[] {
                        api_key,
                        auth_token,
                        message_id}, this.delete_commentOperationCompleted, userState);
        }
        
        private void Ondelete_commentOperationCompleted(object arg) {
            if ((this.delete_commentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.delete_commentCompleted(this, new delete_commentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#get_directory_checksum", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string get_directory_checksum(string api_key, string auth_token, long folder_id, out string checksum) {
            object[] results = this.Invoke("get_directory_checksum", new object[] {
                        api_key,
                        auth_token,
                        folder_id});
            checksum = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_directory_checksum(string api_key, string auth_token, long folder_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_directory_checksum", new object[] {
                        api_key,
                        auth_token,
                        folder_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endget_directory_checksum(System.IAsyncResult asyncResult, out string checksum) {
            object[] results = this.EndInvoke(asyncResult);
            checksum = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_directory_checksumAsync(string api_key, string auth_token, long folder_id) {
            this.get_directory_checksumAsync(api_key, auth_token, folder_id, null);
        }
        
        /// <remarks/>
        public void get_directory_checksumAsync(string api_key, string auth_token, long folder_id, object userState) {
            if ((this.get_directory_checksumOperationCompleted == null)) {
                this.get_directory_checksumOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_directory_checksumOperationCompleted);
            }
            this.InvokeAsync("get_directory_checksum", new object[] {
                        api_key,
                        auth_token,
                        folder_id}, this.get_directory_checksumOperationCompleted, userState);
        }
        
        private void Onget_directory_checksumOperationCompleted(object arg) {
            if ((this.get_directory_checksumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_directory_checksumCompleted(this, new get_directory_checksumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:boxnet#Box_SoapApi#get_server_time", RequestNamespace="urn:boxnet", ResponseNamespace="urn:boxnet")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string get_server_time(string api_key, string auth_token, out long time) {
            object[] results = this.Invoke("get_server_time", new object[] {
                        api_key,
                        auth_token});
            time = ((long)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget_server_time(string api_key, string auth_token, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get_server_time", new object[] {
                        api_key,
                        auth_token}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endget_server_time(System.IAsyncResult asyncResult, out long time) {
            object[] results = this.EndInvoke(asyncResult);
            time = ((long)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_server_timeAsync(string api_key, string auth_token) {
            this.get_server_timeAsync(api_key, auth_token, null);
        }
        
        /// <remarks/>
        public void get_server_timeAsync(string api_key, string auth_token, object userState) {
            if ((this.get_server_timeOperationCompleted == null)) {
                this.get_server_timeOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_server_timeOperationCompleted);
            }
            this.InvokeAsync("get_server_time", new object[] {
                        api_key,
                        auth_token}, this.get_server_timeOperationCompleted, userState);
        }
        
        private void Onget_server_timeOperationCompleted(object arg) {
            if ((this.get_server_timeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_server_timeCompleted(this, new get_server_timeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:boxnet")]
    public partial class SOAPUser {
        
        private string loginField;
        
        private string emailField;
        
        private int access_idField;
        
        private int user_idField;
        
        private long space_amountField;
        
        private long space_usedField;
        
        private long max_upload_sizeField;
        
        /// <remarks/>
        public string login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public int access_id {
            get {
                return this.access_idField;
            }
            set {
                this.access_idField = value;
            }
        }
        
        /// <remarks/>
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
        
        /// <remarks/>
        public long space_amount {
            get {
                return this.space_amountField;
            }
            set {
                this.space_amountField = value;
            }
        }
        
        /// <remarks/>
        public long space_used {
            get {
                return this.space_usedField;
            }
            set {
                this.space_usedField = value;
            }
        }
        
        /// <remarks/>
        public long max_upload_size {
            get {
                return this.max_upload_sizeField;
            }
            set {
                this.max_upload_sizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:boxnet")]
    public partial class SOAPComment {
        
        private long message_idField;
        
        private string messageField;
        
        private string from_userField;
        
        private long from_user_idField;
        
        private string dateField;
        
        private string timeField;
        
        /// <remarks/>
        public long message_id {
            get {
                return this.message_idField;
            }
            set {
                this.message_idField = value;
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string from_user {
            get {
                return this.from_userField;
            }
            set {
                this.from_userField = value;
            }
        }
        
        /// <remarks/>
        public long from_user_id {
            get {
                return this.from_user_idField;
            }
            set {
                this.from_user_idField = value;
            }
        }
        
        /// <remarks/>
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:boxnet")]
    public partial class SOAPCollaborator {
        
        private long user_idField;
        
        private string nameField;
        
        private string emailField;
        
        private string item_permissions_nameField;
        
        private string statusField;
        
        private int notificationField;
        
        private long target_idField;
        
        private string targetField;
        
        /// <remarks/>
        public long user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string item_permissions_name {
            get {
                return this.item_permissions_nameField;
            }
            set {
                this.item_permissions_nameField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int notification {
            get {
                return this.notificationField;
            }
            set {
                this.notificationField = value;
            }
        }
        
        /// <remarks/>
        public long target_id {
            get {
                return this.target_idField;
            }
            set {
                this.target_idField = value;
            }
        }
        
        /// <remarks/>
        public string target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:boxnet")]
    public partial class SOAPFileInfo {
        
        private long file_idField;
        
        private string file_nameField;
        
        private long folder_idField;
        
        private long sharedField;
        
        private string public_nameField;
        
        private long sizeField;
        
        private string descriptionField;
        
        private string sha1Field;
        
        private long createdField;
        
        private long updatedField;
        
        /// <remarks/>
        public long file_id {
            get {
                return this.file_idField;
            }
            set {
                this.file_idField = value;
            }
        }
        
        /// <remarks/>
        public string file_name {
            get {
                return this.file_nameField;
            }
            set {
                this.file_nameField = value;
            }
        }
        
        /// <remarks/>
        public long folder_id {
            get {
                return this.folder_idField;
            }
            set {
                this.folder_idField = value;
            }
        }
        
        /// <remarks/>
        public long shared {
            get {
                return this.sharedField;
            }
            set {
                this.sharedField = value;
            }
        }
        
        /// <remarks/>
        public string public_name {
            get {
                return this.public_nameField;
            }
            set {
                this.public_nameField = value;
            }
        }
        
        /// <remarks/>
        public long size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string sha1 {
            get {
                return this.sha1Field;
            }
            set {
                this.sha1Field = value;
            }
        }
        
        /// <remarks/>
        public long created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public long updated {
            get {
                return this.updatedField;
            }
            set {
                this.updatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:boxnet")]
    public partial class SOAPFolder {
        
        private long folder_idField;
        
        private string folder_nameField;
        
        private long folder_type_idField;
        
        private int user_idField;
        
        private string pathField;
        
        private int sharedField;
        
        private string public_nameField;
        
        private string passwordField;
        
        private long parent_folder_idField;
        
        /// <remarks/>
        public long folder_id {
            get {
                return this.folder_idField;
            }
            set {
                this.folder_idField = value;
            }
        }
        
        /// <remarks/>
        public string folder_name {
            get {
                return this.folder_nameField;
            }
            set {
                this.folder_nameField = value;
            }
        }
        
        /// <remarks/>
        public long folder_type_id {
            get {
                return this.folder_type_idField;
            }
            set {
                this.folder_type_idField = value;
            }
        }
        
        /// <remarks/>
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
        
        /// <remarks/>
        public string path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public int shared {
            get {
                return this.sharedField;
            }
            set {
                this.sharedField = value;
            }
        }
        
        /// <remarks/>
        public string public_name {
            get {
                return this.public_nameField;
            }
            set {
                this.public_nameField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public long parent_folder_id {
            get {
                return this.parent_folder_idField;
            }
            set {
                this.parent_folder_idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void authorizationCompletedEventHandler(object sender, authorizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authorizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal authorizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string auth_token {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SOAPUser user {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPUser)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void get_account_infoCompletedEventHandler(object sender, get_account_infoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_account_infoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_account_infoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SOAPUser user {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPUser)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void logoutCompletedEventHandler(object sender, logoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void get_ticketCompletedEventHandler(object sender, get_ticketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_ticketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_ticketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ticket {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void get_auth_tokenCompletedEventHandler(object sender, get_auth_tokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_auth_tokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_auth_tokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string auth_token {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SOAPUser user {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPUser)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void check_tokenCompletedEventHandler(object sender, check_tokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class check_tokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal check_tokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string auth_token {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SOAPUser user {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPUser)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void registerCompletedEventHandler(object sender, registerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string auth_token {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SOAPUser user {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPUser)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void register_new_userCompletedEventHandler(object sender, register_new_userCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class register_new_userCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal register_new_userCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string auth_token {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SOAPUser user {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPUser)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void get_account_treeCompletedEventHandler(object sender, get_account_treeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_account_treeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_account_treeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] tree {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void export_tagsCompletedEventHandler(object sender, export_tagsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class export_tagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal export_tagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] tag_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void create_folderCompletedEventHandler(object sender, create_folderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class create_folderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal create_folderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SOAPFolder folder {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPFolder)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void copyCompletedEventHandler(object sender, copyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void moveCompletedEventHandler(object sender, moveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void renameCompletedEventHandler(object sender, renameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class renameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal renameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void deleteCompletedEventHandler(object sender, deleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void public_shareCompletedEventHandler(object sender, public_shareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class public_shareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal public_shareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string public_name {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void public_unshareCompletedEventHandler(object sender, public_unshareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class public_unshareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal public_unshareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void private_shareCompletedEventHandler(object sender, private_shareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class private_shareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal private_shareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void add_to_myboxCompletedEventHandler(object sender, add_to_myboxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class add_to_myboxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal add_to_myboxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void box_add_nodeCompletedEventHandler(object sender, box_add_nodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class box_add_nodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal box_add_nodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void add_to_tagCompletedEventHandler(object sender, add_to_tagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class add_to_tagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal add_to_tagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void email_sharedCompletedEventHandler(object sender, email_sharedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class email_sharedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal email_sharedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void get_public_folder_treeCompletedEventHandler(object sender, get_public_folder_treeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_public_folder_treeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_public_folder_treeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] tree {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void add_to_public_folderCompletedEventHandler(object sender, add_to_public_folderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class add_to_public_folderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal add_to_public_folderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void verify_registration_emailCompletedEventHandler(object sender, verify_registration_emailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class verify_registration_emailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal verify_registration_emailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void get_file_infoCompletedEventHandler(object sender, get_file_infoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_file_infoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_file_infoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SOAPFileInfo info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPFileInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void set_descriptionCompletedEventHandler(object sender, set_descriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class set_descriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal set_descriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void register_new_user_nameCompletedEventHandler(object sender, register_new_user_nameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class register_new_user_nameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal register_new_user_nameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string auth_token {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SOAPUser user {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPUser)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void register_paid_userCompletedEventHandler(object sender, register_paid_userCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class register_paid_userCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal register_paid_userCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string auth_token {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SOAPUser user {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPUser)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void get_friendsCompletedEventHandler(object sender, get_friendsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_friendsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_friendsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] friends {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void request_friendsCompletedEventHandler(object sender, request_friendsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class request_friendsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal request_friendsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void get_updatesCompletedEventHandler(object sender, get_updatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_updatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_updatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] updates {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void get_collaboration_invitesCompletedEventHandler(object sender, get_collaboration_invitesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_collaboration_invitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_collaboration_invitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] collaborations {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void get_collaboratorsCompletedEventHandler(object sender, get_collaboratorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_collaboratorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_collaboratorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SOAPCollaborator[] collaborators {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPCollaborator[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void invite_collaboratorsCompletedEventHandler(object sender, invite_collaboratorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class invite_collaboratorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal invite_collaboratorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] invited_collaborators {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public byte[] unsuccessful_invitations {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public SOAPCollaborator[] collaborators {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPCollaborator[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void accept_collaborationCompletedEventHandler(object sender, accept_collaborationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accept_collaborationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accept_collaborationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void remove_collaborationCompletedEventHandler(object sender, remove_collaborationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class remove_collaborationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal remove_collaborationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SOAPCollaborator[] collaborators {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPCollaborator[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void get_collaboration_linkCompletedEventHandler(object sender, get_collaboration_linkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_collaboration_linkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_collaboration_linkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] collab_link {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void toggle_collaboration_linkCompletedEventHandler(object sender, toggle_collaboration_linkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class toggle_collaboration_linkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal toggle_collaboration_linkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] collab_link {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void get_collaboration_permissionsCompletedEventHandler(object sender, get_collaboration_permissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_collaboration_permissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_collaboration_permissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] permissions {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void collaborator_change_permissionCompletedEventHandler(object sender, collaborator_change_permissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class collaborator_change_permissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal collaborator_change_permissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SOAPCollaborator[] collaborators {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPCollaborator[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void collaborator_change_notificationCompletedEventHandler(object sender, collaborator_change_notificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class collaborator_change_notificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal collaborator_change_notificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SOAPCollaborator[] collaborators {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPCollaborator[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void get_commentsCompletedEventHandler(object sender, get_commentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_commentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_commentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SOAPComment[] comments {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPComment[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void add_commentCompletedEventHandler(object sender, add_commentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class add_commentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal add_commentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SOAPComment[] comments {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SOAPComment[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void delete_commentCompletedEventHandler(object sender, delete_commentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class delete_commentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal delete_commentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void get_directory_checksumCompletedEventHandler(object sender, get_directory_checksumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_directory_checksumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_directory_checksumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string checksum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void get_server_timeCompletedEventHandler(object sender, get_server_timeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_server_timeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_server_timeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long time {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
}
